#!/usr/bin/env bash
#
# /usr/local/xbin/jpgopt
#
#
# Description:
#   A script/wrapper to automate 'mkjpg' and 'jpegoptim'. If the input is a png
#   it'll run 'mkjpg' to convert it to a jpg, and then get optimized.
#
#   Quality defaults to 80%.
#
# Usage:
#   jpgopt [ % ] file.jpg       Default is 100 (%)
#	jpgopt 60 file.jpg          60% quality
#	jpgopt **/{more,files}.jpg  More files
#	jpgopt -h                   Show help
#

ERR=0;

# Help
[[ ${#} < 1 || ${1} == '-h' ]] && sed -n '12,16p' ${0} && exit 1;


# Check dependencies
for dep in jpegoptim mkjpg; do
	[[ ! `type ${dep} 2>/dev/null` ]] && echo -e ":: You must install '${dep}' to continue." && ERR=1;
done
[[ ${ERR} == 1 ]] && echo -e "\nAborting..." && exit ${ERR};


# Quality: 40-100 (default: 80)
_q=80;
_regexp='^[0-9]+$';
[[ ${1} =~ ${_regexp} && ${1} -ge 40 && ${1} -le 100 ]] && _q=${1} && shift;


# JpegOptim.
function jpegopt()
{
	local _img="${1}";
	jpegoptim -m${_q} -ftPv -s "${_img}";
}


# Loop $@
for file in "$@"; do
	[[ -f "${file}" && "${file##*.}" != 'jpg' ]] && \
	    echo ":: Running 'mkjpg'..." && mkjpg "${file}" && echo;
	if [[ -f ${file} ]]; then
		jpegopt "${file%.*}.jpg";
	else
		echo "'${file}' doesn't exist";
		ERR=1;
	fi
	echo;
done

exit ${ERR};
